{"version":3,"sources":["settings.ts","services/assetsService.ts","services/companiesService.ts","services/unitsService.ts","services/usersService.ts","components/AssetData/AssetData.tsx","components/ListItem/Asset.tsx","components/Form/Form.tsx","components/Navbar/Navbar.tsx","components/index.tsx","App.tsx","index.tsx"],"names":["url","getAssets","a","axios","get","then","x","data","assets","getCompanies","companies","getUnits","units","getUsers","users","AssetData","props","health","healthOptions","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","showInLegend","series","name","asset","colorByPoint","y","healthscore","color","className","alt","src","image","style","height","width","highcharts","Highcharts","options","display","alignItems","justifyContent","metrics","totalCollectsUptime","moment","lastUptimeAt","format","Math","round","Number","totalUptime","sensors","map","specifications","maxTemp","power","rpm","status","Asset","useState","background","setBackground","useEffect","ListItem","backgroundColor","onClick","setModel","model","MaintanceForm","compValue","setCompValue","userValue","setUserValue","unitValue","setUnitValue","FormControl","sx","m","marginTop","InputLabel","Select","value","onChange","event","target","input","OutlinedInput","label","companie","MenuItem","id","unit","user","Button","variant","padding","Navbar","filterOptions","Home","setAssets","auxAssets","setAuxAssets","setCompanies","setUsers","setUnits","init","assetsRes","companiesRes","usersRes","unitsRes","sort","b","flexDirection","Box","buttons","statusName","all","success","warning","danger","flexWrap","button","index","border","borderRadius","option","tempAssets","filteredAssets","filter","handleFilter","viewBox","fill","xmlns","cx","cy","rx","ry","marginLeft","StatusFilter","List","position","overflow","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc054c98.chunk.js","sourcesContent":["const url: string = 'https://my-json-server.typicode.com/tractian/fake-api';\n\nexport default url;","import url from \"../settings\";\nimport axios from \"axios\";\n\nexport const getAssets = async () => {\n  const assets = await axios.get(`${url}/assets`)\n    .then(x => x.data);\n  \n  return assets;\n};\n\nexport const getAssetsById = async (id: string) => {\n  const assetsById = await axios.get(`${url}/assets/${id}`)\n    .then(x => x.data);\n  \n  return assetsById;\n};\n","import url from \"../settings\";\nimport axios from \"axios\";\n\nexport const getCompanies = async () => {\n  const companies = await axios.get(`${url}/companies`)\n    .then(x => x.data);\n  \n  return companies;\n};\n\nexport const getCompaniesById = async (id: string) => {\n  const companiesById = await axios.get(`${url}/companies/${id}`)\n    .then(x => x.data);\n  \n  return companiesById;\n};","import url from \"../settings\";\nimport axios from \"axios\";\n\nexport const getUnits = async () => {\n  const units = await axios.get(`${url}/units`)\n    .then(x => x.data);\n  \n  return units;\n};\n\nexport const getUnitsById = async (id: string) => {\n  const unitsById = await axios.get(`${url}/units/${id}`)\n    .then(x => x.data);\n  \n  return unitsById;\n};","import url from \"../settings\";\nimport axios from \"axios\";\n\nexport const getUsers = async () => {\n  const users = await axios.get(`${url}/users`)\n    .then(x => x.data);\n  \n  return users;\n};\n\nexport const getUsersById = async (id: string) => {\n  const usersById = await axios.get(`${url}/users/${id}`)\n    .then(x => x.data);\n  \n  return usersById;\n};\n","import React from \"react\";\nimport Assets from \"../../interfaces/assets\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport moment from \"moment\";\n\nimport \"./style.css\";\n\ninterface AssetDataProps {\n  asset: Assets;\n}\n\nfunction AssetData(props: AssetDataProps) {\n  const chooseColor = (health: number) => {\n    if (health >= 70) return \"#00FF57\";\n\n    if (health <= 59) return \"#FF5050\";\n\n    if (health <= 69) return \"#FFA800\";\n\n    return \"#fff\";\n  };\n\n  const healthOptions = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: \"pie\",\n    },\n    title: {\n      text: \"Saúde da máquina\",\n    },\n    tooltip: {\n      pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\n    },\n    accessibility: {\n      point: {\n        valueSuffix: \"%\",\n      },\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: \"pointer\",\n        dataLabels: {\n          enabled: false,\n        },\n        showInLegend: true,\n      },\n    },\n    series: [\n      {\n        name: props?.asset?.name,\n        colorByPoint: true,\n        data: [\n          {\n            name: \"Saúde Complementar\",\n            y: 100 - props?.asset?.healthscore,\n            color: \"#1F3577\",\n          },\n          {\n            name: \"Saúde Atual\",\n            y: props?.asset?.healthscore,\n            color: chooseColor(props?.asset?.healthscore),\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <div\n      className=\"container\"\n    >\n      <div\n        className='box'\n      >\n        <div>\n          <h1 className=\"title\">{props?.asset?.name}</h1>\n          <img\n            alt=\"asset-img\"\n            src={props?.asset?.image}\n            style={{ height: 300, width: 300 }}\n          />\n        </div>\n        <HighchartsReact highcharts={Highcharts} options={healthOptions} />\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <div className=\"box-data\">\n            <h1 className=\"title\">\n              Total de Coletas: {props?.asset?.metrics?.totalCollectsUptime} hrs\n            </h1>\n            <h1 className=\"title\">\n              Última vez ativo:{\" \"}\n              {moment(props?.asset?.metrics?.lastUptimeAt).format(\"DD/MM/YYYY\")}\n            </h1>\n            <h1 className=\"title\">\n              Total de horas ativo:{\" \"}\n              {Math.round(Number(props?.asset?.metrics?.totalUptime))} hrs\n            </h1>\n            <h1 className=\"title\">\n              Sensor: {props?.asset?.sensors?.map((x) => x)}\n            </h1>\n            <h1 className=\"title\">\n              Temperatura máxima: {props?.asset?.specifications?.maxTemp}\n            </h1>\n            <h1 className=\"title\">\n              Potência: {props?.asset?.specifications?.power}\n            </h1>\n            <h1 className=\"title\">\n              Rotações por minuto (rpm): {props?.asset?.specifications?.rpm}\n            </h1>\n            <h1 className=\"title\">Status: {props?.asset?.status}</h1>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AssetData;\n","import ListItem from '@material-ui/core/ListItem';\nimport React, { useEffect, useState } from 'react';\nimport Assets from '../../interfaces/assets';\nimport './style.css'\n\ninterface AssetProps {\n  asset: Assets;\n  setModel(model: Assets): void;\n}\n\nfunction Asset(props: AssetProps) {\n  const [background, setBackground] = useState<string>('#fff');\n  const colorStatus = () => {\n    if (props.asset.healthscore >= 70)\n      return '#00FF57';\n\n    if (props.asset.healthscore <= 59)\n      return '#FF5050';\n\n    if (props.asset.healthscore <= 69)\n      return '#FFA800';\n\n    return '#fff';\n  };\n\n  const handleAsset = () => {\n    props.setModel(props.asset);\n  };\n\n  useEffect(() => {\n    const color = colorStatus();\n    setBackground(color);\n  }, [props]);\n\n  return (\n    <ListItem className='asset' style={{ backgroundColor: background }} onClick={handleAsset}>\n      <h1 className='asset-name'>{props.asset.model}</h1>\n      <h1 className='asset-name'>{props.asset.name}</h1>\n      <h1 className='asset-name'>{props.asset.healthscore}%</h1>\n    </ListItem>\n  )\n}\n\nexport default Asset;","import React, { useState } from 'react';\nimport { Button, FormControl, InputLabel, MenuItem, OutlinedInput, Select } from '@material-ui/core';\nimport Companies from '../../interfaces/companies';\nimport Units from '../../interfaces/units';\nimport Users from '../../interfaces/users';\n\nimport './style.css';\n\ninterface MaintanceFormProps {\n  companies: Companies[];\n  users: Users[];\n  units: Units[];\n}\n\nfunction MaintanceForm(props: MaintanceFormProps) {\n  const [compValue, setCompValue] = useState<string>('');\n  const [userValue, setUserValue] = useState<string>('');\n  const [unitValue, setUnitValue] = useState<string>('');\n\n  const handleMaintance = () => {\n    setCompValue('');\n    setUserValue('');\n    setUnitValue('');\n  };\n  \n  return (\n    <div className='form'>\n      <FormControl sx={{ m: 1, width: 300, marginTop: 15 }}>\n        <InputLabel>Empresa</InputLabel>\n        <Select\n          value={compValue}\n          onChange={event => setCompValue(event.target.value)}\n          input={<OutlinedInput label=\"Empresa\" />}\n        >\n          {props.companies.map(companie => (\n            <MenuItem\n              key={companie.id}\n              value={companie.name}\n            >\n              {companie.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl sx={{ m: 1, width: 300, marginTop: 15 }}>\n        <InputLabel>Unidade</InputLabel>\n        <Select\n          value={unitValue}\n          onChange={event => setUnitValue(event.target.value)}\n          input={<OutlinedInput label=\"Empresa\" />}\n        >\n          {props.units.map(unit => (\n            <MenuItem\n              key={unit.id}\n              value={unit.name}\n            >\n              {unit.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl sx={{ m: 1, width: 300, marginTop: 15 }}>\n        <InputLabel>Usuário</InputLabel>\n        <Select\n          value={userValue}\n          onChange={event => setUserValue(event.target.value)}\n          input={<OutlinedInput label=\"Empresa\" />}\n        >\n          {props.users.map(user => (\n            <MenuItem\n              key={user.id}\n              value={user.name}\n            >\n              {user.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <Button\n        variant='contained'\n        style={{ \n          backgroundColor: '#1F3577',\n          marginTop: 110,\n          padding: 15\n         }}\n        onClick={handleMaintance}\n      >\n        Solicitar Manuntenção\n      </Button>\n    </div>\n  )\n}\n\nexport default MaintanceForm;","import React from 'react';\nimport './style.css'\n\nfunction Navbar() {\n  return (\n    <div className='navbar'>\n      <h1 className='navbar-text'>DASHBOARD TRACTIAN</h1>\n    </div>\n  )\n}\n\nexport default Navbar;","import { List } from '@material-ui/core';\nimport Box from '@material-ui/system/Box';\nimport React, { useEffect, useState } from 'react';\nimport Assets from '../interfaces/assets';\nimport Companies from '../interfaces/companies';\nimport Units from '../interfaces/units';\nimport Users from '../interfaces/users';\nimport { getAssets } from '../services/assetsService';\nimport { getCompanies } from '../services/companiesService';\nimport { getUnits } from '../services/unitsService';\nimport { getUsers } from '../services/usersService';\nimport AssetData from './AssetData/AssetData';\nimport Asset from './ListItem/Asset';\nimport MaintanceForm from './Form/Form';\n\nimport Navbar from './Navbar/Navbar';\n\nconst enum filterOptions {\n  danger,\n  warning,\n  success,\n  all\n};\n\nfunction Home() {\n  const [assets, setAssets] = useState<Assets[]>([]);\n  const [auxAssets, setAuxAssets] = useState<Assets[]>([]);\n  const [model, setModel] = useState<Assets>({} as Assets);\n\n  const [companies, setCompanies] = useState<Companies[]>([]);\n  const [users, setUsers] = useState<Users[]>([]);\n  const [units, setUnits] = useState<Units[]>([]);\n\n  const init = async () => {\n    const assetsRes: any = await getAssets();\n    const companiesRes: any = await getCompanies();\n    const usersRes: any = await getUsers();\n    const unitsRes: any = await getUnits();\n\n    const assets: Assets[] = [...assetsRes];\n    assets.sort((a, b) => a.healthscore - b.healthscore);\n    setAuxAssets(assets);\n    setAssets(assets);\n\n    setCompanies(companiesRes);\n    setUsers(usersRes);\n    setUnits(unitsRes);\n  };\n\n  const handleFilter = (option: filterOptions) => {\n    const tempAssets: Assets[] = [...assets];\n    if (option === filterOptions.danger) {\n      const filteredAssets = tempAssets.filter(x => x.healthscore <= 59);\n      setAuxAssets(filteredAssets);\n      return;\n    };\n\n    if (option === filterOptions.warning) {\n      const filteredAssets = tempAssets.filter(x => (x.healthscore <= 69 && x.healthscore >= 60));\n      setAuxAssets(filteredAssets);\n      return;\n    };\n\n    if (option === filterOptions.success) {\n      const filteredAssets = tempAssets.filter(x => x.healthscore >= 70);\n      setAuxAssets(filteredAssets);\n      return;\n    };\n\n    setAuxAssets(assets);\n  }\n\n  const StatusFilter = () => {\n    let buttons = [\n      {statusName: 'Todos', color: '#1F3577', background: 'white', status: filterOptions.all},\n      {statusName: 'Normal', color: '#00FF57', background: 'white', status: filterOptions.success},\n      {statusName: 'Atenção', color: '#FFA800', background: 'white', status: filterOptions.warning},\n      {statusName: 'Perigo', color: '#FF5050', background: 'white', status: filterOptions.danger}\n    ];\n\n    return(\n      <div style={{display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center' }}>\n        {buttons.map((button: any, index: number) => (\n          <button \n            key={index}\n            style={{ \n              border: `solid 1px ${button.color}`,\n              backgroundColor: '#fff',\n              // marginRight: 8,\n              borderRadius: 10,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-evenly',\n              padding: 5\n           }}\n           onClick={() => handleFilter(button.status)}\n          >\n            {<svg width=\"15\" height=\"15\" viewBox=\"0 0 22 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><ellipse cx=\"11\" cy=\"10.5\" rx=\"11\" ry=\"10.5\" fill={button.color}/></svg>}\n            <span style={{ marginLeft: 5 }}>{button.statusName}</span>\n          </button>\n        ))}\n      </div>\n    )\n  }\n\n  const setFirstAsset = () => {\n    setModel(assets[0]);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    setFirstAsset();\n  }, [assets]);\n\n  return (\n    <>\n      <Navbar />\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        <Box style={{\n          width: 300,\n          height: '84vh'\n        }}>\n          <div style={{ marginTop: 90 }}>\n            {StatusFilter()}\n          </div>\n          <List style={{ \n            width: '100%',\n            position: 'relative',\n            overflow: 'auto', \n            padding: 10,\n            height: '100%'\n            }}>\n            {\n              auxAssets.map(asset => {\n                return (\n                  <Asset asset={asset} setModel={setModel} />\n                )\n              })\n            }\n          </List>\n        </Box>\n\n        <div style={{ \n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          marginLeft: '100px'\n         }}>\n          <MaintanceForm companies={companies} users={users} units={units} />\n          <AssetData asset={model} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport Home from './components';\nimport './styles/global.css';\n\nfunction App() {\n  return <Home />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}